apiVersion: apps/v1
kind: Deployment
metadata: 
  name: backend-user-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-user
  template:
    metadata:
      labels: 
        app: backend-user
    spec:
      containers:
        - name: backend-user-container
          image: duypk2000/udagram-api-user:v1
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USERNAME
              valueFrom: 
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_USERNAME
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: udagram-configmap
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_BUCKET
                  name: udagram-configmap
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: udagram-configmap
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: udagram-configmap
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  key: AWS_PROFILE
                  name: udagram-configmap
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: udagram-configmap
            - name: URL
              valueFrom:
                configMapKeyRef:
                  key: URL
                  name: udagram-configmap                                                 
          volumeMounts:
            - mountPath: "/root/.aws"
              name: "aws-secret"
              readOnly: true
      #restartPolicy: Always
      volumes:
        - name: aws-secret
          secret:
            secretName: aws-secret
    